// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 56;
	objects = {

/* Begin PBXBuildFile section */
		420DD7922CDA773A00B85C71 /* 29. Divide Two Integers.swift in Sources */ = {isa = PBXBuildFile; fileRef = 420DD7912CDA773800B85C71 /* 29. Divide Two Integers.swift */; };
		420DD7942CDA77C000B85C71 /* 189. Rotate Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = 420DD7932CDA77BF00B85C71 /* 189. Rotate Array.swift */; };
		420DD7962CDA782900B85C71 /* 412. Fizz Buzz.swift in Sources */ = {isa = PBXBuildFile; fileRef = 420DD7952CDA782800B85C71 /* 412. Fizz Buzz.swift */; };
		420DD7C12CDBE01C00B85C71 /* 1668. Maximum Repeating Substring.swift in Sources */ = {isa = PBXBuildFile; fileRef = 420DD7C02CDBE01B00B85C71 /* 1668. Maximum Repeating Substring.swift */; };
		420DD7C32CDBE10A00B85C71 /* 55. Jump Game.swift in Sources */ = {isa = PBXBuildFile; fileRef = 420DD7C22CDBE10900B85C71 /* 55. Jump Game.swift */; };
		420DD7F42CDD5D8500B85C71 /* 4. Median of Two Sorted Arrays.swift in Sources */ = {isa = PBXBuildFile; fileRef = 420DD7F32CDD5D8200B85C71 /* 4. Median of Two Sorted Arrays.swift */; };
		4242C78B2CD9702F006E4C86 /* 206. Reverse Linked List.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4242C78A2CD9702D006E4C86 /* 206. Reverse Linked List.swift */; };
		4242C78D2CD9710A006E4C86 /* 234. Palindrome Linked List.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4242C78C2CD97107006E4C86 /* 234. Palindrome Linked List.swift */; };
		42A7FD082CD311C100F02D75 /* 121. Best Time to Buy and Sell Stock.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD072CD311C100F02D75 /* 121. Best Time to Buy and Sell Stock.swift */; };
		42A7FD0A2CD3151300F02D75 /* 1768. Merge Strings Alternately.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD092CD3151300F02D75 /* 1768. Merge Strings Alternately.swift */; };
		42A7FD0C2CD318B400F02D75 /* 2582. Pass the Pillow.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD0B2CD318B400F02D75 /* 2582. Pass the Pillow.swift */; };
		42A7FD0E2CD3FA5900F02D75 /* 2706. Buy Two Chocolates.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD0D2CD3FA5900F02D75 /* 2706. Buy Two Chocolates.swift */; };
		42A7FD102CD403C900F02D75 /* 7. Reverse Integer.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD0F2CD403C900F02D75 /* 7. Reverse Integer.swift */; };
		42A7FD122CD4883D00F02D75 /* 539. Minimum Time Difference.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD112CD4883D00F02D75 /* 539. Minimum Time Difference.swift */; };
		42A7FD142CD5D22700F02D75 /* 58. Length of Last Word.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD132CD5D22700F02D75 /* 58. Length of Last Word.swift */; };
		42A7FD162CD6AF5100F02D75 /* 258. Add Digits.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD152CD6AF5100F02D75 /* 258. Add Digits.swift */; };
		42A7FD182CD6B2AC00F02D75 /* 268. Missing Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD172CD6B2AC00F02D75 /* 268. Missing Number.swift */; };
		42A7FD1A2CD6B49D00F02D75 /* 326. Power of Three.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD192CD6B49D00F02D75 /* 326. Power of Three.swift */; };
		42A7FD1C2CD7F35F00F02D75 /* 125. Valid Palindrome.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD1B2CD7F35F00F02D75 /* 125. Valid Palindrome.swift */; };
		42A7FD1E2CD7F57A00F02D75 /* 392. Is Subsequence.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD1D2CD7F57A00F02D75 /* 392. Is Subsequence.swift */; };
		42A7FD202CD7F68A00F02D75 /* 242. Valid Anagram.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD1F2CD7F68A00F02D75 /* 242. Valid Anagram.swift */; };
		42A7FD222CD7FE8D00F02D75 /* 83. Remove Duplicates from Sorted List.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42A7FD212CD7FE8D00F02D75 /* 83. Remove Duplicates from Sorted List.swift */; };
		42B0C2E52D408886008FCC8C /* 867. Transpose Matrix.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2E42D408885008FCC8C /* 867. Transpose Matrix.swift */; };
		42B0C2E72D408996008FCC8C /* 74. Search a 2D Matrix.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2E62D408994008FCC8C /* 74. Search a 2D Matrix.swift */; };
		42B0C2E92D409EA5008FCC8C /* 566. Reshape the Matrix.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2E82D409EA3008FCC8C /* 566. Reshape the Matrix.swift */; };
		42B0C2EB2D41B336008FCC8C /* 73. Set Matrix Zeroes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2EA2D41B334008FCC8C /* 73. Set Matrix Zeroes.swift */; };
		42B0C2ED2D41B336008FCC8C /* 88. Merge Sorted Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2EC2D41B336008FCC8C /* 88. Merge Sorted Array.swift */; };
		42B0C2F12D41B336008FCC8C /* 118. Pascal's Triangle.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2F02D41B336008FCC8C /* 118. Pascal's Triangle.swift */; };
		42B0C2F52D41B336008FCC8C /* 119. Pascal's Triangle II.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2F42D41B336008FCC8C /* 119. Pascal's Triangle II.swift */; };
		42B0C2F72D41B336008FCC8C /* 214. Shortest Palindrome.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2F62D41B336008FCC8C /* 214. Shortest Palindrome.swift */; };
		42B0C2F92D41B336008FCC8C /* 169. Majority Element.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2F82D41B336008FCC8C /* 169. Majority Element.swift */; };
		42B0C2FB2D41B336008FCC8C /* 122. Best Time to Buy and Sell Stock II.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2FA2D41B336008FCC8C /* 122. Best Time to Buy and Sell Stock II.swift */; };
		42B0C2FD2D41B336008FCC8C /* 151. Reverse Words in a String.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2FC2D41B336008FCC8C /* 151. Reverse Words in a String.swift */; };
		42B0C2FF2D41B336008FCC8C /* 283. Move Zeroes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C2FE2D41B336008FCC8C /* 283. Move Zeroes.swift */; };
		42B0C3012D41B336008FCC8C /* 290. Word Pattern.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3002D41B336008FCC8C /* 290. Word Pattern.swift */; };
		42B0C3032D41B336008FCC8C /* 344. Reverse String.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3022D41B336008FCC8C /* 344. Reverse String.swift */; };
		42B0C3052D41B336008FCC8C /* 345. Reverse Vowels of a String.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3042D41B336008FCC8C /* 345. Reverse Vowels of a String.swift */; };
		42B0C3092D41B336008FCC8C /* 451. Sort Characters By Frequency.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3082D41B336008FCC8C /* 451. Sort Characters By Frequency.swift */; };
		42B0C30B2D41B336008FCC8C /* 455. Assign Cookies.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C30A2D41B336008FCC8C /* 455. Assign Cookies.swift */; };
		42B0C30D2D41B336008FCC8C /* 509. Fibonacci Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C30C2D41B336008FCC8C /* 509. Fibonacci Number.swift */; };
		42B0C30F2D41B336008FCC8C /* 520. Detect Capital.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C30E2D41B336008FCC8C /* 520. Detect Capital.swift */; };
		42B0C3112D41B336008FCC8C /* 561. Array Partition.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3102D41B336008FCC8C /* 561. Array Partition.swift */; };
		42B0C3132D41B336008FCC8C /* 649. Dota2 Senate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3122D41B336008FCC8C /* 649. Dota2 Senate.swift */; };
		42B0C3152D41B336008FCC8C /* 657. Robot Return to Origin.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3142D41B336008FCC8C /* 657. Robot Return to Origin.swift */; };
		42B0C3172D41B336008FCC8C /* 709. To Lower Case.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3162D41B336008FCC8C /* 709. To Lower Case.swift */; };
		42B0C3192D41B336008FCC8C /* 771. Jewels and Stones.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3182D41B336008FCC8C /* 771. Jewels and Stones.swift */; };
		42B0C31B2D41B336008FCC8C /* 819. Most Common Word.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C31A2D41B336008FCC8C /* 819. Most Common Word.swift */; };
		42B0C31D2D41B336008FCC8C /* 796. Rotate String.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C31C2D41B336008FCC8C /* 796. Rotate String.swift */; };
		42B0C31F2D41B336008FCC8C /* 746. Min Cost Climbing Stairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C31E2D41B336008FCC8C /* 746. Min Cost Climbing Stairs.swift */; };
		42B0C3212D41B336008FCC8C /* 1207. Unique Number of Occurrences.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3202D41B336008FCC8C /* 1207. Unique Number of Occurrences.swift */; };
		42B0C3232D41B336008FCC8C /* 1189. Maximum Number of Balloons.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3222D41B336008FCC8C /* 1189. Maximum Number of Balloons.swift */; };
		42B0C3252D41B336008FCC8C /* 1528. Shuffle String.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3242D41B336008FCC8C /* 1528. Shuffle String.swift */; };
		42B0C3272D41B336008FCC8C /* 1108. Defanging an IP Address.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3262D41B336008FCC8C /* 1108. Defanging an IP Address.swift */; };
		42B0C3292D41B336008FCC8C /* 1512. Number of Good Pairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3282D41B336008FCC8C /* 1512. Number of Good Pairs.swift */; };
		42B0C32B2D41B336008FCC8C /* 1408. String Matching in an Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C32A2D41B336008FCC8C /* 1408. String Matching in an Array.swift */; };
		42B0C32D2D41B336008FCC8C /* 1431. Kids With the Greatest Number of Candies.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C32C2D41B336008FCC8C /* 1431. Kids With the Greatest Number of Candies.swift */; };
		42B0C32F2D41B336008FCC8C /* 1470. Shuffle the Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C32E2D41B336008FCC8C /* 1470. Shuffle the Array.swift */; };
		42B0C3312D41B336008FCC8C /* 917. Reverse Only Letters.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3302D41B336008FCC8C /* 917. Reverse Only Letters.swift */; };
		42B0C3332D41B336008FCC8C /* 1365. How Many Numbers Are Smaller Than the Current Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3322D41B336008FCC8C /* 1365. How Many Numbers Are Smaller Than the Current Number.swift */; };
		42B0C3352D41B336008FCC8C /* 1672. Richest Customer Wealth.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3342D41B336008FCC8C /* 1672. Richest Customer Wealth.swift */; };
		42B0C3372D41B336008FCC8C /* 1486. XOR Operation in an Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3362D41B336008FCC8C /* 1486. XOR Operation in an Array.swift */; };
		42B0C3392D41B336008FCC8C /* 1137. N-th Tribonacci Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42B0C3382D41B336008FCC8C /* 1137. N-th Tribonacci Number.swift */; };
		42BB9D5B2CCF14E600A8CB57 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D5A2CCF14E600A8CB57 /* AppDelegate.swift */; };
		42BB9D5D2CCF14E600A8CB57 /* SceneDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D5C2CCF14E600A8CB57 /* SceneDelegate.swift */; };
		42BB9D5F2CCF14E600A8CB57 /* ViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D5E2CCF14E600A8CB57 /* ViewController.swift */; };
		42BB9D622CCF14E600A8CB57 /* Base in Resources */ = {isa = PBXBuildFile; fileRef = 42BB9D612CCF14E600A8CB57 /* Base */; };
		42BB9D642CCF14E900A8CB57 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 42BB9D632CCF14E900A8CB57 /* Assets.xcassets */; };
		42BB9D672CCF14E900A8CB57 /* Base in Resources */ = {isa = PBXBuildFile; fileRef = 42BB9D662CCF14E900A8CB57 /* Base */; };
		42BB9D712CCF159400A8CB57 /* 150. Evaluate Reverse Polish Notation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D702CCF159400A8CB57 /* 150. Evaluate Reverse Polish Notation.swift */; };
		42BB9D732CCF162D00A8CB57 /* 20. Valid Parentheses.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D722CCF162D00A8CB57 /* 20. Valid Parentheses.swift */; };
		42BB9D772CCF16CE00A8CB57 /* 21. Merge Two Sorted Lists.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D762CCF16CE00A8CB57 /* 21. Merge Two Sorted Lists.swift */; };
		42BB9D792CCF16FD00A8CB57 /* ListNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D782CCF16FC00A8CB57 /* ListNode.swift */; };
		42BB9D7B2CCF175F00A8CB57 /* 141. Linked List Cycle.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D7A2CCF175F00A8CB57 /* 141. Linked List Cycle.swift */; };
		42BB9D7D2CCF17D400A8CB57 /* 53. Maximum Subarray.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D7C2CCF17D400A8CB57 /* 53. Maximum Subarray.swift */; };
		42BB9D7F2CCF180000A8CB57 /* 33. Search in Rotated Sorted Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D7E2CCF180000A8CB57 /* 33. Search in Rotated Sorted Array.swift */; };
		42BB9D812CCF183F00A8CB57 /* 9. Palindrome Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D802CCF183F00A8CB57 /* 9. Palindrome Number.swift */; };
		42BB9D832CCF18B900A8CB57 /* 70. Climbing Stairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D822CCF18B900A8CB57 /* 70. Climbing Stairs.swift */; };
		42BB9D852CCF250F00A8CB57 /* 66. Plus One.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42BB9D842CCF250F00A8CB57 /* 66. Plus One.swift */; };
		42D6E8272D30A21600E832FB /* 3. Longest Substring Without Repeating Characters.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E8262D30A21600E832FB /* 3. Longest Substring Without Repeating Characters.swift */; };
		42D6E8292D30A21600E832FB /* 13. Roman to Integer.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E8282D30A21600E832FB /* 13. Roman to Integer.swift */; };
		42D6E82D2D30A21600E832FB /* 14. Longest Common Prefix.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E82C2D30A21600E832FB /* 14. Longest Common Prefix.swift */; };
		42D6E82F2D30A21600E832FB /* 26. Remove Duplicates from Sorted Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E82E2D30A21600E832FB /* 26. Remove Duplicates from Sorted Array.swift */; };
		42D6E8332D30ABCB00E832FB /* 27. Remove Element.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E8322D30ABC200E832FB /* 27. Remove Element.swift */; };
		42D6E8372D30ABCB00E832FB /* 28. Find the Index of the First Occurrence in a String.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E8362D30ABCB00E832FB /* 28. Find the Index of the First Occurrence in a String.swift */; };
		42D6E8392D30ABCB00E832FB /* 34. Find First and Last Position of Element in Sorted Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E8382D30ABCB00E832FB /* 34. Find First and Last Position of Element in Sorted Array.swift */; };
		42D6E83B2D30ABCB00E832FB /* 41. First Missing Positive.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E83A2D30ABCB00E832FB /* 41. First Missing Positive.swift */; };
		42D6E83D2D30ABCB00E832FB /* 48. Rotate Image.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E83C2D30ABCB00E832FB /* 48. Rotate Image.swift */; };
		42D6E83F2D30ABCB00E832FB /* 71. Simplify Path.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E83E2D30ABCB00E832FB /* 71. Simplify Path.swift */; };
		42D6E8432D30ABCB00E832FB /* 80. Remove Duplicates from Sorted Array II.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D6E8422D30ABCB00E832FB /* 80. Remove Duplicates from Sorted Array II.swift */; };
		42D775722CD07501007F4B77 /* 1249. Minimum Remove to Make Valid Parentheses.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D775712CD07501007F4B77 /* 1249. Minimum Remove to Make Valid Parentheses.swift */; };
		42D775742CD1C93E007F4B77 /* 2309. Greatest English Letter in Upper and Lower Case.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D775732CD1C93E007F4B77 /* 2309. Greatest English Letter in Upper and Lower Case.swift */; };
		42D775762CD1CE50007F4B77 /* 69. Sqrt(x).swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D775752CD1CE50007F4B77 /* 69. Sqrt(x).swift */; };
		42D775782CD1D22A007F4B77 /* 252. Meeting Rooms.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D775772CD1D22A007F4B77 /* 252. Meeting Rooms.swift */; };
		42D7757A2CD1E6F1007F4B77 /* 167. Two Sum II - Input Array Is Sorted.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D775792CD1E6F1007F4B77 /* 167. Two Sum II - Input Array Is Sorted.swift */; };
		42D7757C2CD1E906007F4B77 /* 1. Two Sum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D7757B2CD1E906007F4B77 /* 1. Two Sum.swift */; };
		42D7757E2CD1EB34007F4B77 /* 170. Two Sum III - Data structure design.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D7757D2CD1EB34007F4B77 /* 170. Two Sum III - Data structure design.swift */; };
		42D775802CD1F0D8007F4B77 /* 2235. Add Two Integers.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D7757F2CD1F0D8007F4B77 /* 2235. Add Two Integers.swift */; };
		42D775822CD1F27F007F4B77 /* 231. Power of Two.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D775812CD1F27F007F4B77 /* 231. Power of Two.swift */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		420DD7912CDA773800B85C71 /* 29. Divide Two Integers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "29. Divide Two Integers.swift"; sourceTree = "<group>"; };
		420DD7932CDA77BF00B85C71 /* 189. Rotate Array.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "189. Rotate Array.swift"; sourceTree = "<group>"; };
		420DD7952CDA782800B85C71 /* 412. Fizz Buzz.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "412. Fizz Buzz.swift"; sourceTree = "<group>"; };
		420DD7C02CDBE01B00B85C71 /* 1668. Maximum Repeating Substring.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1668. Maximum Repeating Substring.swift"; sourceTree = "<group>"; };
		420DD7C22CDBE10900B85C71 /* 55. Jump Game.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "55. Jump Game.swift"; sourceTree = "<group>"; };
		420DD7F32CDD5D8200B85C71 /* 4. Median of Two Sorted Arrays.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "4. Median of Two Sorted Arrays.swift"; sourceTree = "<group>"; };
		4242C78A2CD9702D006E4C86 /* 206. Reverse Linked List.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "206. Reverse Linked List.swift"; sourceTree = "<group>"; };
		4242C78C2CD97107006E4C86 /* 234. Palindrome Linked List.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "234. Palindrome Linked List.swift"; sourceTree = "<group>"; };
		42A7FD072CD311C100F02D75 /* 121. Best Time to Buy and Sell Stock.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "121. Best Time to Buy and Sell Stock.swift"; sourceTree = "<group>"; };
		42A7FD092CD3151300F02D75 /* 1768. Merge Strings Alternately.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1768. Merge Strings Alternately.swift"; sourceTree = "<group>"; };
		42A7FD0B2CD318B400F02D75 /* 2582. Pass the Pillow.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "2582. Pass the Pillow.swift"; sourceTree = "<group>"; };
		42A7FD0D2CD3FA5900F02D75 /* 2706. Buy Two Chocolates.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "2706. Buy Two Chocolates.swift"; sourceTree = "<group>"; };
		42A7FD0F2CD403C900F02D75 /* 7. Reverse Integer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "7. Reverse Integer.swift"; sourceTree = "<group>"; };
		42A7FD112CD4883D00F02D75 /* 539. Minimum Time Difference.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "539. Minimum Time Difference.swift"; sourceTree = "<group>"; };
		42A7FD132CD5D22700F02D75 /* 58. Length of Last Word.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "58. Length of Last Word.swift"; sourceTree = "<group>"; };
		42A7FD152CD6AF5100F02D75 /* 258. Add Digits.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "258. Add Digits.swift"; sourceTree = "<group>"; };
		42A7FD172CD6B2AC00F02D75 /* 268. Missing Number.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "268. Missing Number.swift"; sourceTree = "<group>"; };
		42A7FD192CD6B49D00F02D75 /* 326. Power of Three.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "326. Power of Three.swift"; sourceTree = "<group>"; };
		42A7FD1B2CD7F35F00F02D75 /* 125. Valid Palindrome.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "125. Valid Palindrome.swift"; sourceTree = "<group>"; };
		42A7FD1D2CD7F57A00F02D75 /* 392. Is Subsequence.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "392. Is Subsequence.swift"; sourceTree = "<group>"; };
		42A7FD1F2CD7F68A00F02D75 /* 242. Valid Anagram.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "242. Valid Anagram.swift"; sourceTree = "<group>"; };
		42A7FD212CD7FE8D00F02D75 /* 83. Remove Duplicates from Sorted List.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "83. Remove Duplicates from Sorted List.swift"; sourceTree = "<group>"; };
		42B0C2E42D408885008FCC8C /* 867. Transpose Matrix.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "867. Transpose Matrix.swift"; sourceTree = "<group>"; };
		42B0C2E62D408994008FCC8C /* 74. Search a 2D Matrix.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "74. Search a 2D Matrix.swift"; sourceTree = "<group>"; };
		42B0C2E82D409EA3008FCC8C /* 566. Reshape the Matrix.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "566. Reshape the Matrix.swift"; sourceTree = "<group>"; };
		42B0C2EA2D41B334008FCC8C /* 73. Set Matrix Zeroes.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "73. Set Matrix Zeroes.swift"; sourceTree = "<group>"; };
		42B0C2EC2D41B336008FCC8C /* 88. Merge Sorted Array.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "88. Merge Sorted Array.swift"; sourceTree = "<group>"; };
		42B0C2F02D41B336008FCC8C /* 118. Pascal's Triangle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "118. Pascal's Triangle.swift"; sourceTree = "<group>"; };
		42B0C2F42D41B336008FCC8C /* 119. Pascal's Triangle II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "119. Pascal's Triangle II.swift"; sourceTree = "<group>"; };
		42B0C2F62D41B336008FCC8C /* 214. Shortest Palindrome.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "214. Shortest Palindrome.swift"; sourceTree = "<group>"; };
		42B0C2F82D41B336008FCC8C /* 169. Majority Element.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "169. Majority Element.swift"; sourceTree = "<group>"; };
		42B0C2FA2D41B336008FCC8C /* 122. Best Time to Buy and Sell Stock II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "122. Best Time to Buy and Sell Stock II.swift"; sourceTree = "<group>"; };
		42B0C2FC2D41B336008FCC8C /* 151. Reverse Words in a String.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "151. Reverse Words in a String.swift"; sourceTree = "<group>"; };
		42B0C2FE2D41B336008FCC8C /* 283. Move Zeroes.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "283. Move Zeroes.swift"; sourceTree = "<group>"; };
		42B0C3002D41B336008FCC8C /* 290. Word Pattern.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "290. Word Pattern.swift"; sourceTree = "<group>"; };
		42B0C3022D41B336008FCC8C /* 344. Reverse String.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "344. Reverse String.swift"; sourceTree = "<group>"; };
		42B0C3042D41B336008FCC8C /* 345. Reverse Vowels of a String.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "345. Reverse Vowels of a String.swift"; sourceTree = "<group>"; };
		42B0C3082D41B336008FCC8C /* 451. Sort Characters By Frequency.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "451. Sort Characters By Frequency.swift"; sourceTree = "<group>"; };
		42B0C30A2D41B336008FCC8C /* 455. Assign Cookies.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "455. Assign Cookies.swift"; sourceTree = "<group>"; };
		42B0C30C2D41B336008FCC8C /* 509. Fibonacci Number.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "509. Fibonacci Number.swift"; sourceTree = "<group>"; };
		42B0C30E2D41B336008FCC8C /* 520. Detect Capital.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "520. Detect Capital.swift"; sourceTree = "<group>"; };
		42B0C3102D41B336008FCC8C /* 561. Array Partition.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "561. Array Partition.swift"; sourceTree = "<group>"; };
		42B0C3122D41B336008FCC8C /* 649. Dota2 Senate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "649. Dota2 Senate.swift"; sourceTree = "<group>"; };
		42B0C3142D41B336008FCC8C /* 657. Robot Return to Origin.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "657. Robot Return to Origin.swift"; sourceTree = "<group>"; };
		42B0C3162D41B336008FCC8C /* 709. To Lower Case.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "709. To Lower Case.swift"; sourceTree = "<group>"; };
		42B0C3182D41B336008FCC8C /* 771. Jewels and Stones.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "771. Jewels and Stones.swift"; sourceTree = "<group>"; };
		42B0C31A2D41B336008FCC8C /* 819. Most Common Word.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "819. Most Common Word.swift"; sourceTree = "<group>"; };
		42B0C31C2D41B336008FCC8C /* 796. Rotate String.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "796. Rotate String.swift"; sourceTree = "<group>"; };
		42B0C31E2D41B336008FCC8C /* 746. Min Cost Climbing Stairs.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "746. Min Cost Climbing Stairs.swift"; sourceTree = "<group>"; };
		42B0C3202D41B336008FCC8C /* 1207. Unique Number of Occurrences.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1207. Unique Number of Occurrences.swift"; sourceTree = "<group>"; };
		42B0C3222D41B336008FCC8C /* 1189. Maximum Number of Balloons.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1189. Maximum Number of Balloons.swift"; sourceTree = "<group>"; };
		42B0C3242D41B336008FCC8C /* 1528. Shuffle String.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1528. Shuffle String.swift"; sourceTree = "<group>"; };
		42B0C3262D41B336008FCC8C /* 1108. Defanging an IP Address.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1108. Defanging an IP Address.swift"; sourceTree = "<group>"; };
		42B0C3282D41B336008FCC8C /* 1512. Number of Good Pairs.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1512. Number of Good Pairs.swift"; sourceTree = "<group>"; };
		42B0C32A2D41B336008FCC8C /* 1408. String Matching in an Array.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1408. String Matching in an Array.swift"; sourceTree = "<group>"; };
		42B0C32C2D41B336008FCC8C /* 1431. Kids With the Greatest Number of Candies.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1431. Kids With the Greatest Number of Candies.swift"; sourceTree = "<group>"; };
		42B0C32E2D41B336008FCC8C /* 1470. Shuffle the Array.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1470. Shuffle the Array.swift"; sourceTree = "<group>"; };
		42B0C3302D41B336008FCC8C /* 917. Reverse Only Letters.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "917. Reverse Only Letters.swift"; sourceTree = "<group>"; };
		42B0C3322D41B336008FCC8C /* 1365. How Many Numbers Are Smaller Than the Current Number.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1365. How Many Numbers Are Smaller Than the Current Number.swift"; sourceTree = "<group>"; };
		42B0C3342D41B336008FCC8C /* 1672. Richest Customer Wealth.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1672. Richest Customer Wealth.swift"; sourceTree = "<group>"; };
		42B0C3362D41B336008FCC8C /* 1486. XOR Operation in an Array.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1486. XOR Operation in an Array.swift"; sourceTree = "<group>"; };
		42B0C3382D41B336008FCC8C /* 1137. N-th Tribonacci Number.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1137. N-th Tribonacci Number.swift"; sourceTree = "<group>"; };
		42BB9D572CCF14E600A8CB57 /* Leetcode.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Leetcode.app; sourceTree = BUILT_PRODUCTS_DIR; };
		42BB9D5A2CCF14E600A8CB57 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
		42BB9D5C2CCF14E600A8CB57 /* SceneDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SceneDelegate.swift; sourceTree = "<group>"; };
		42BB9D5E2CCF14E600A8CB57 /* ViewController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ViewController.swift; sourceTree = "<group>"; };
		42BB9D612CCF14E600A8CB57 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Main.storyboard; sourceTree = "<group>"; };
		42BB9D632CCF14E900A8CB57 /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
		42BB9D662CCF14E900A8CB57 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = "<group>"; };
		42BB9D682CCF14E900A8CB57 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		42BB9D702CCF159400A8CB57 /* 150. Evaluate Reverse Polish Notation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "150. Evaluate Reverse Polish Notation.swift"; sourceTree = "<group>"; };
		42BB9D722CCF162D00A8CB57 /* 20. Valid Parentheses.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "20. Valid Parentheses.swift"; sourceTree = "<group>"; };
		42BB9D762CCF16CE00A8CB57 /* 21. Merge Two Sorted Lists.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "21. Merge Two Sorted Lists.swift"; sourceTree = "<group>"; };
		42BB9D782CCF16FC00A8CB57 /* ListNode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ListNode.swift; sourceTree = "<group>"; };
		42BB9D7A2CCF175F00A8CB57 /* 141. Linked List Cycle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "141. Linked List Cycle.swift"; sourceTree = "<group>"; };
		42BB9D7C2CCF17D400A8CB57 /* 53. Maximum Subarray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "53. Maximum Subarray.swift"; sourceTree = "<group>"; };
		42BB9D7E2CCF180000A8CB57 /* 33. Search in Rotated Sorted Array.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "33. Search in Rotated Sorted Array.swift"; sourceTree = "<group>"; };
		42BB9D802CCF183F00A8CB57 /* 9. Palindrome Number.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "9. Palindrome Number.swift"; sourceTree = "<group>"; };
		42BB9D822CCF18B900A8CB57 /* 70. Climbing Stairs.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "70. Climbing Stairs.swift"; sourceTree = "<group>"; };
		42BB9D842CCF250F00A8CB57 /* 66. Plus One.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "66. Plus One.swift"; sourceTree = "<group>"; };
		42D6E8262D30A21600E832FB /* 3. Longest Substring Without Repeating Characters.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "3. Longest Substring Without Repeating Characters.swift"; sourceTree = "<group>"; };
		42D6E8282D30A21600E832FB /* 13. Roman to Integer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "13. Roman to Integer.swift"; sourceTree = "<group>"; };
		42D6E82C2D30A21600E832FB /* 14. Longest Common Prefix.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "14. Longest Common Prefix.swift"; sourceTree = "<group>"; };
		42D6E82E2D30A21600E832FB /* 26. Remove Duplicates from Sorted Array.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "26. Remove Duplicates from Sorted Array.swift"; sourceTree = "<group>"; };
		42D6E8322D30ABC200E832FB /* 27. Remove Element.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "27. Remove Element.swift"; sourceTree = "<group>"; };
		42D6E8362D30ABCB00E832FB /* 28. Find the Index of the First Occurrence in a String.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "28. Find the Index of the First Occurrence in a String.swift"; sourceTree = "<group>"; };
		42D6E8382D30ABCB00E832FB /* 34. Find First and Last Position of Element in Sorted Array.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "34. Find First and Last Position of Element in Sorted Array.swift"; sourceTree = "<group>"; };
		42D6E83A2D30ABCB00E832FB /* 41. First Missing Positive.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "41. First Missing Positive.swift"; sourceTree = "<group>"; };
		42D6E83C2D30ABCB00E832FB /* 48. Rotate Image.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "48. Rotate Image.swift"; sourceTree = "<group>"; };
		42D6E83E2D30ABCB00E832FB /* 71. Simplify Path.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "71. Simplify Path.swift"; sourceTree = "<group>"; };
		42D6E8422D30ABCB00E832FB /* 80. Remove Duplicates from Sorted Array II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "80. Remove Duplicates from Sorted Array II.swift"; sourceTree = "<group>"; };
		42D775712CD07501007F4B77 /* 1249. Minimum Remove to Make Valid Parentheses.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1249. Minimum Remove to Make Valid Parentheses.swift"; sourceTree = "<group>"; };
		42D775732CD1C93E007F4B77 /* 2309. Greatest English Letter in Upper and Lower Case.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "2309. Greatest English Letter in Upper and Lower Case.swift"; sourceTree = "<group>"; };
		42D775752CD1CE50007F4B77 /* 69. Sqrt(x).swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "69. Sqrt(x).swift"; sourceTree = "<group>"; };
		42D775772CD1D22A007F4B77 /* 252. Meeting Rooms.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "252. Meeting Rooms.swift"; sourceTree = "<group>"; };
		42D775792CD1E6F1007F4B77 /* 167. Two Sum II - Input Array Is Sorted.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "167. Two Sum II - Input Array Is Sorted.swift"; sourceTree = "<group>"; };
		42D7757B2CD1E906007F4B77 /* 1. Two Sum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1. Two Sum.swift"; sourceTree = "<group>"; };
		42D7757D2CD1EB34007F4B77 /* 170. Two Sum III - Data structure design.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "170. Two Sum III - Data structure design.swift"; sourceTree = "<group>"; };
		42D7757F2CD1F0D8007F4B77 /* 2235. Add Two Integers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "2235. Add Two Integers.swift"; sourceTree = "<group>"; };
		42D775812CD1F27F007F4B77 /* 231. Power of Two.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "231. Power of Two.swift"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		42BB9D542CCF14E600A8CB57 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		42BB9D4E2CCF14E600A8CB57 = {
			isa = PBXGroup;
			children = (
				42BB9D592CCF14E600A8CB57 /* Leetcode */,
				42BB9D582CCF14E600A8CB57 /* Products */,
			);
			sourceTree = "<group>";
		};
		42BB9D582CCF14E600A8CB57 /* Products */ = {
			isa = PBXGroup;
			children = (
				42BB9D572CCF14E600A8CB57 /* Leetcode.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		42BB9D592CCF14E600A8CB57 /* Leetcode */ = {
			isa = PBXGroup;
			children = (
				42BB9D5A2CCF14E600A8CB57 /* AppDelegate.swift */,
				42BB9D5C2CCF14E600A8CB57 /* SceneDelegate.swift */,
				42BB9D5E2CCF14E600A8CB57 /* ViewController.swift */,
				42BB9D602CCF14E600A8CB57 /* Main.storyboard */,
				42BB9D632CCF14E900A8CB57 /* Assets.xcassets */,
				42BB9D652CCF14E900A8CB57 /* LaunchScreen.storyboard */,
				42BB9D682CCF14E900A8CB57 /* Info.plist */,
				42BB9D782CCF16FC00A8CB57 /* ListNode.swift */,
				42D7757B2CD1E906007F4B77 /* 1. Two Sum.swift */,
				42D6E8262D30A21600E832FB /* 3. Longest Substring Without Repeating Characters.swift */,
				420DD7F32CDD5D8200B85C71 /* 4. Median of Two Sorted Arrays.swift */,
				42A7FD0F2CD403C900F02D75 /* 7. Reverse Integer.swift */,
				42BB9D802CCF183F00A8CB57 /* 9. Palindrome Number.swift */,
				42D6E8282D30A21600E832FB /* 13. Roman to Integer.swift */,
				42D6E82C2D30A21600E832FB /* 14. Longest Common Prefix.swift */,
				42BB9D722CCF162D00A8CB57 /* 20. Valid Parentheses.swift */,
				42BB9D762CCF16CE00A8CB57 /* 21. Merge Two Sorted Lists.swift */,
				42D6E82E2D30A21600E832FB /* 26. Remove Duplicates from Sorted Array.swift */,
				42D6E8322D30ABC200E832FB /* 27. Remove Element.swift */,
				42D6E8362D30ABCB00E832FB /* 28. Find the Index of the First Occurrence in a String.swift */,
				420DD7912CDA773800B85C71 /* 29. Divide Two Integers.swift */,
				42BB9D7E2CCF180000A8CB57 /* 33. Search in Rotated Sorted Array.swift */,
				42D6E8382D30ABCB00E832FB /* 34. Find First and Last Position of Element in Sorted Array.swift */,
				42D6E83A2D30ABCB00E832FB /* 41. First Missing Positive.swift */,
				42D6E83C2D30ABCB00E832FB /* 48. Rotate Image.swift */,
				42BB9D7C2CCF17D400A8CB57 /* 53. Maximum Subarray.swift */,
				420DD7C22CDBE10900B85C71 /* 55. Jump Game.swift */,
				42A7FD132CD5D22700F02D75 /* 58. Length of Last Word.swift */,
				42BB9D842CCF250F00A8CB57 /* 66. Plus One.swift */,
				42D775752CD1CE50007F4B77 /* 69. Sqrt(x).swift */,
				42BB9D822CCF18B900A8CB57 /* 70. Climbing Stairs.swift */,
				42D6E83E2D30ABCB00E832FB /* 71. Simplify Path.swift */,
				42B0C2EA2D41B334008FCC8C /* 73. Set Matrix Zeroes.swift */,
				42B0C2E62D408994008FCC8C /* 74. Search a 2D Matrix.swift */,
				42D6E8422D30ABCB00E832FB /* 80. Remove Duplicates from Sorted Array II.swift */,
				42A7FD212CD7FE8D00F02D75 /* 83. Remove Duplicates from Sorted List.swift */,
				42B0C2EC2D41B336008FCC8C /* 88. Merge Sorted Array.swift */,
				42B0C2F02D41B336008FCC8C /* 118. Pascal's Triangle.swift */,
				42B0C2F42D41B336008FCC8C /* 119. Pascal's Triangle II.swift */,
				42A7FD072CD311C100F02D75 /* 121. Best Time to Buy and Sell Stock.swift */,
				42B0C2FA2D41B336008FCC8C /* 122. Best Time to Buy and Sell Stock II.swift */,
				42A7FD1B2CD7F35F00F02D75 /* 125. Valid Palindrome.swift */,
				42BB9D7A2CCF175F00A8CB57 /* 141. Linked List Cycle.swift */,
				42BB9D702CCF159400A8CB57 /* 150. Evaluate Reverse Polish Notation.swift */,
				42B0C2FC2D41B336008FCC8C /* 151. Reverse Words in a String.swift */,
				42D775792CD1E6F1007F4B77 /* 167. Two Sum II - Input Array Is Sorted.swift */,
				42B0C2F82D41B336008FCC8C /* 169. Majority Element.swift */,
				42D7757D2CD1EB34007F4B77 /* 170. Two Sum III - Data structure design.swift */,
				420DD7932CDA77BF00B85C71 /* 189. Rotate Array.swift */,
				4242C78A2CD9702D006E4C86 /* 206. Reverse Linked List.swift */,
				42B0C2F62D41B336008FCC8C /* 214. Shortest Palindrome.swift */,
				42D775812CD1F27F007F4B77 /* 231. Power of Two.swift */,
				4242C78C2CD97107006E4C86 /* 234. Palindrome Linked List.swift */,
				42A7FD1F2CD7F68A00F02D75 /* 242. Valid Anagram.swift */,
				42D775772CD1D22A007F4B77 /* 252. Meeting Rooms.swift */,
				42A7FD152CD6AF5100F02D75 /* 258. Add Digits.swift */,
				42A7FD172CD6B2AC00F02D75 /* 268. Missing Number.swift */,
				42B0C2FE2D41B336008FCC8C /* 283. Move Zeroes.swift */,
				42B0C3002D41B336008FCC8C /* 290. Word Pattern.swift */,
				42A7FD192CD6B49D00F02D75 /* 326. Power of Three.swift */,
				42B0C3022D41B336008FCC8C /* 344. Reverse String.swift */,
				42B0C3042D41B336008FCC8C /* 345. Reverse Vowels of a String.swift */,
				42A7FD1D2CD7F57A00F02D75 /* 392. Is Subsequence.swift */,
				420DD7952CDA782800B85C71 /* 412. Fizz Buzz.swift */,
				42B0C3082D41B336008FCC8C /* 451. Sort Characters By Frequency.swift */,
				42B0C30A2D41B336008FCC8C /* 455. Assign Cookies.swift */,
				42B0C30C2D41B336008FCC8C /* 509. Fibonacci Number.swift */,
				42B0C30E2D41B336008FCC8C /* 520. Detect Capital.swift */,
				42A7FD112CD4883D00F02D75 /* 539. Minimum Time Difference.swift */,
				42B0C3102D41B336008FCC8C /* 561. Array Partition.swift */,
				42B0C2E82D409EA3008FCC8C /* 566. Reshape the Matrix.swift */,
				42B0C3122D41B336008FCC8C /* 649. Dota2 Senate.swift */,
				42B0C3142D41B336008FCC8C /* 657. Robot Return to Origin.swift */,
				42B0C3162D41B336008FCC8C /* 709. To Lower Case.swift */,
				42B0C31E2D41B336008FCC8C /* 746. Min Cost Climbing Stairs.swift */,
				42B0C3182D41B336008FCC8C /* 771. Jewels and Stones.swift */,
				42B0C31C2D41B336008FCC8C /* 796. Rotate String.swift */,
				42B0C31A2D41B336008FCC8C /* 819. Most Common Word.swift */,
				42B0C2E42D408885008FCC8C /* 867. Transpose Matrix.swift */,
				42B0C3302D41B336008FCC8C /* 917. Reverse Only Letters.swift */,
				42B0C3262D41B336008FCC8C /* 1108. Defanging an IP Address.swift */,
				42B0C3382D41B336008FCC8C /* 1137. N-th Tribonacci Number.swift */,
				42B0C3222D41B336008FCC8C /* 1189. Maximum Number of Balloons.swift */,
				42B0C3202D41B336008FCC8C /* 1207. Unique Number of Occurrences.swift */,
				42D775712CD07501007F4B77 /* 1249. Minimum Remove to Make Valid Parentheses.swift */,
				42B0C3322D41B336008FCC8C /* 1365. How Many Numbers Are Smaller Than the Current Number.swift */,
				42B0C32A2D41B336008FCC8C /* 1408. String Matching in an Array.swift */,
				42B0C32C2D41B336008FCC8C /* 1431. Kids With the Greatest Number of Candies.swift */,
				42B0C32E2D41B336008FCC8C /* 1470. Shuffle the Array.swift */,
				42B0C3362D41B336008FCC8C /* 1486. XOR Operation in an Array.swift */,
				42B0C3282D41B336008FCC8C /* 1512. Number of Good Pairs.swift */,
				42B0C3242D41B336008FCC8C /* 1528. Shuffle String.swift */,
				420DD7C02CDBE01B00B85C71 /* 1668. Maximum Repeating Substring.swift */,
				42B0C3342D41B336008FCC8C /* 1672. Richest Customer Wealth.swift */,
				42A7FD092CD3151300F02D75 /* 1768. Merge Strings Alternately.swift */,
				42A7FD0B2CD318B400F02D75 /* 2582. Pass the Pillow.swift */,
				42D7757F2CD1F0D8007F4B77 /* 2235. Add Two Integers.swift */,
				42D775732CD1C93E007F4B77 /* 2309. Greatest English Letter in Upper and Lower Case.swift */,
				42A7FD0D2CD3FA5900F02D75 /* 2706. Buy Two Chocolates.swift */,
			);
			path = Leetcode;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		42BB9D562CCF14E600A8CB57 /* Leetcode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 42BB9D6B2CCF14E900A8CB57 /* Build configuration list for PBXNativeTarget "Leetcode" */;
			buildPhases = (
				42BB9D532CCF14E600A8CB57 /* Sources */,
				42BB9D542CCF14E600A8CB57 /* Frameworks */,
				42BB9D552CCF14E600A8CB57 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Leetcode;
			productName = Leetcode;
			productReference = 42BB9D572CCF14E600A8CB57 /* Leetcode.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		42BB9D4F2CCF14E600A8CB57 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastSwiftUpdateCheck = 1540;
				LastUpgradeCheck = 1540;
				TargetAttributes = {
					42BB9D562CCF14E600A8CB57 = {
						CreatedOnToolsVersion = 15.4;
					};
				};
			};
			buildConfigurationList = 42BB9D522CCF14E600A8CB57 /* Build configuration list for PBXProject "Leetcode" */;
			compatibilityVersion = "Xcode 14.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 42BB9D4E2CCF14E600A8CB57;
			productRefGroup = 42BB9D582CCF14E600A8CB57 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				42BB9D562CCF14E600A8CB57 /* Leetcode */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		42BB9D552CCF14E600A8CB57 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				42BB9D642CCF14E900A8CB57 /* Assets.xcassets in Resources */,
				42BB9D672CCF14E900A8CB57 /* Base in Resources */,
				42BB9D622CCF14E600A8CB57 /* Base in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		42BB9D532CCF14E600A8CB57 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				42A7FD082CD311C100F02D75 /* 121. Best Time to Buy and Sell Stock.swift in Sources */,
				42B0C2FF2D41B336008FCC8C /* 283. Move Zeroes.swift in Sources */,
				42B0C3332D41B336008FCC8C /* 1365. How Many Numbers Are Smaller Than the Current Number.swift in Sources */,
				42B0C3112D41B336008FCC8C /* 561. Array Partition.swift in Sources */,
				42B0C31F2D41B336008FCC8C /* 746. Min Cost Climbing Stairs.swift in Sources */,
				42BB9D792CCF16FD00A8CB57 /* ListNode.swift in Sources */,
				42BB9D712CCF159400A8CB57 /* 150. Evaluate Reverse Polish Notation.swift in Sources */,
				42A7FD0A2CD3151300F02D75 /* 1768. Merge Strings Alternately.swift in Sources */,
				42B0C32D2D41B336008FCC8C /* 1431. Kids With the Greatest Number of Candies.swift in Sources */,
				42B0C3052D41B336008FCC8C /* 345. Reverse Vowels of a String.swift in Sources */,
				42BB9D5F2CCF14E600A8CB57 /* ViewController.swift in Sources */,
				4242C78B2CD9702F006E4C86 /* 206. Reverse Linked List.swift in Sources */,
				42B0C3372D41B336008FCC8C /* 1486. XOR Operation in an Array.swift in Sources */,
				42B0C32F2D41B336008FCC8C /* 1470. Shuffle the Array.swift in Sources */,
				42A7FD102CD403C900F02D75 /* 7. Reverse Integer.swift in Sources */,
				42D6E8392D30ABCB00E832FB /* 34. Find First and Last Position of Element in Sorted Array.swift in Sources */,
				42B0C3012D41B336008FCC8C /* 290. Word Pattern.swift in Sources */,
				42BB9D852CCF250F00A8CB57 /* 66. Plus One.swift in Sources */,
				42A7FD142CD5D22700F02D75 /* 58. Length of Last Word.swift in Sources */,
				42D6E8272D30A21600E832FB /* 3. Longest Substring Without Repeating Characters.swift in Sources */,
				42B0C2EB2D41B336008FCC8C /* 73. Set Matrix Zeroes.swift in Sources */,
				42B0C2E92D409EA5008FCC8C /* 566. Reshape the Matrix.swift in Sources */,
				42B0C2FB2D41B336008FCC8C /* 122. Best Time to Buy and Sell Stock II.swift in Sources */,
				42D7757C2CD1E906007F4B77 /* 1. Two Sum.swift in Sources */,
				42B0C3312D41B336008FCC8C /* 917. Reverse Only Letters.swift in Sources */,
				42B0C3152D41B336008FCC8C /* 657. Robot Return to Origin.swift in Sources */,
				42D6E83F2D30ABCB00E832FB /* 71. Simplify Path.swift in Sources */,
				42D6E83D2D30ABCB00E832FB /* 48. Rotate Image.swift in Sources */,
				42BB9D772CCF16CE00A8CB57 /* 21. Merge Two Sorted Lists.swift in Sources */,
				42BB9D5B2CCF14E600A8CB57 /* AppDelegate.swift in Sources */,
				42BB9D732CCF162D00A8CB57 /* 20. Valid Parentheses.swift in Sources */,
				42B0C2FD2D41B336008FCC8C /* 151. Reverse Words in a String.swift in Sources */,
				42B0C2E72D408996008FCC8C /* 74. Search a 2D Matrix.swift in Sources */,
				42B0C3232D41B336008FCC8C /* 1189. Maximum Number of Balloons.swift in Sources */,
				42B0C3352D41B336008FCC8C /* 1672. Richest Customer Wealth.swift in Sources */,
				42D6E82F2D30A21600E832FB /* 26. Remove Duplicates from Sorted Array.swift in Sources */,
				42A7FD0C2CD318B400F02D75 /* 2582. Pass the Pillow.swift in Sources */,
				42D6E8292D30A21600E832FB /* 13. Roman to Integer.swift in Sources */,
				42BB9D7D2CCF17D400A8CB57 /* 53. Maximum Subarray.swift in Sources */,
				420DD7922CDA773A00B85C71 /* 29. Divide Two Integers.swift in Sources */,
				42A7FD182CD6B2AC00F02D75 /* 268. Missing Number.swift in Sources */,
				420DD7C12CDBE01C00B85C71 /* 1668. Maximum Repeating Substring.swift in Sources */,
				42D6E83B2D30ABCB00E832FB /* 41. First Missing Positive.swift in Sources */,
				42D6E8332D30ABCB00E832FB /* 27. Remove Element.swift in Sources */,
				42B0C2F92D41B336008FCC8C /* 169. Majority Element.swift in Sources */,
				42B0C3172D41B336008FCC8C /* 709. To Lower Case.swift in Sources */,
				42D775722CD07501007F4B77 /* 1249. Minimum Remove to Make Valid Parentheses.swift in Sources */,
				42BB9D7B2CCF175F00A8CB57 /* 141. Linked List Cycle.swift in Sources */,
				420DD7C32CDBE10A00B85C71 /* 55. Jump Game.swift in Sources */,
				42A7FD222CD7FE8D00F02D75 /* 83. Remove Duplicates from Sorted List.swift in Sources */,
				42A7FD162CD6AF5100F02D75 /* 258. Add Digits.swift in Sources */,
				42D6E8432D30ABCB00E832FB /* 80. Remove Duplicates from Sorted Array II.swift in Sources */,
				42D7757E2CD1EB34007F4B77 /* 170. Two Sum III - Data structure design.swift in Sources */,
				42B0C3272D41B336008FCC8C /* 1108. Defanging an IP Address.swift in Sources */,
				42D775822CD1F27F007F4B77 /* 231. Power of Two.swift in Sources */,
				420DD7F42CDD5D8500B85C71 /* 4. Median of Two Sorted Arrays.swift in Sources */,
				42D7757A2CD1E6F1007F4B77 /* 167. Two Sum II - Input Array Is Sorted.swift in Sources */,
				42A7FD0E2CD3FA5900F02D75 /* 2706. Buy Two Chocolates.swift in Sources */,
				42B0C32B2D41B336008FCC8C /* 1408. String Matching in an Array.swift in Sources */,
				42D6E82D2D30A21600E832FB /* 14. Longest Common Prefix.swift in Sources */,
				42B0C2F12D41B336008FCC8C /* 118. Pascal's Triangle.swift in Sources */,
				42B0C3032D41B336008FCC8C /* 344. Reverse String.swift in Sources */,
				42D775742CD1C93E007F4B77 /* 2309. Greatest English Letter in Upper and Lower Case.swift in Sources */,
				42B0C31D2D41B336008FCC8C /* 796. Rotate String.swift in Sources */,
				42B0C30B2D41B336008FCC8C /* 455. Assign Cookies.swift in Sources */,
				42A7FD1E2CD7F57A00F02D75 /* 392. Is Subsequence.swift in Sources */,
				42A7FD1A2CD6B49D00F02D75 /* 326. Power of Three.swift in Sources */,
				4242C78D2CD9710A006E4C86 /* 234. Palindrome Linked List.swift in Sources */,
				42B0C3392D41B336008FCC8C /* 1137. N-th Tribonacci Number.swift in Sources */,
				42B0C30F2D41B336008FCC8C /* 520. Detect Capital.swift in Sources */,
				42B0C2ED2D41B336008FCC8C /* 88. Merge Sorted Array.swift in Sources */,
				42A7FD1C2CD7F35F00F02D75 /* 125. Valid Palindrome.swift in Sources */,
				42BB9D832CCF18B900A8CB57 /* 70. Climbing Stairs.swift in Sources */,
				42B0C3092D41B336008FCC8C /* 451. Sort Characters By Frequency.swift in Sources */,
				42D775802CD1F0D8007F4B77 /* 2235. Add Two Integers.swift in Sources */,
				420DD7962CDA782900B85C71 /* 412. Fizz Buzz.swift in Sources */,
				420DD7942CDA77C000B85C71 /* 189. Rotate Array.swift in Sources */,
				42D775762CD1CE50007F4B77 /* 69. Sqrt(x).swift in Sources */,
				42BB9D812CCF183F00A8CB57 /* 9. Palindrome Number.swift in Sources */,
				42BB9D5D2CCF14E600A8CB57 /* SceneDelegate.swift in Sources */,
				42B0C2F52D41B336008FCC8C /* 119. Pascal's Triangle II.swift in Sources */,
				42B0C3212D41B336008FCC8C /* 1207. Unique Number of Occurrences.swift in Sources */,
				42B0C3292D41B336008FCC8C /* 1512. Number of Good Pairs.swift in Sources */,
				42B0C30D2D41B336008FCC8C /* 509. Fibonacci Number.swift in Sources */,
				42B0C3192D41B336008FCC8C /* 771. Jewels and Stones.swift in Sources */,
				42B0C3252D41B336008FCC8C /* 1528. Shuffle String.swift in Sources */,
				42BB9D7F2CCF180000A8CB57 /* 33. Search in Rotated Sorted Array.swift in Sources */,
				42B0C3132D41B336008FCC8C /* 649. Dota2 Senate.swift in Sources */,
				42A7FD202CD7F68A00F02D75 /* 242. Valid Anagram.swift in Sources */,
				42A7FD122CD4883D00F02D75 /* 539. Minimum Time Difference.swift in Sources */,
				42B0C2F72D41B336008FCC8C /* 214. Shortest Palindrome.swift in Sources */,
				42D775782CD1D22A007F4B77 /* 252. Meeting Rooms.swift in Sources */,
				42B0C2E52D408886008FCC8C /* 867. Transpose Matrix.swift in Sources */,
				42B0C31B2D41B336008FCC8C /* 819. Most Common Word.swift in Sources */,
				42D6E8372D30ABCB00E832FB /* 28. Find the Index of the First Occurrence in a String.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		42BB9D602CCF14E600A8CB57 /* Main.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				42BB9D612CCF14E600A8CB57 /* Base */,
			);
			name = Main.storyboard;
			sourceTree = "<group>";
		};
		42BB9D652CCF14E900A8CB57 /* LaunchScreen.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				42BB9D662CCF14E900A8CB57 /* Base */,
			);
			name = LaunchScreen.storyboard;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		42BB9D692CCF14E900A8CB57 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 17.5;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "DEBUG $(inherited)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		42BB9D6A2CCF14E900A8CB57 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 17.5;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = iphoneos;
				SWIFT_COMPILATION_MODE = wholemodule;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		42BB9D6C2CCF14E900A8CB57 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = K2LC483PKZ;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = Leetcode/Info.plist;
				INFOPLIST_KEY_UIApplicationSupportsIndirectInputEvents = YES;
				INFOPLIST_KEY_UILaunchStoryboardName = LaunchScreen;
				INFOPLIST_KEY_UIMainStoryboardFile = Main;
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationPortrait UIInterfaceOrientationPortraitUpsideDown UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPhone = "UIInterfaceOrientationPortrait UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = "Dmytro-Ryshchuk.Leetcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		42BB9D6D2CCF14E900A8CB57 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = K2LC483PKZ;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = Leetcode/Info.plist;
				INFOPLIST_KEY_UIApplicationSupportsIndirectInputEvents = YES;
				INFOPLIST_KEY_UILaunchStoryboardName = LaunchScreen;
				INFOPLIST_KEY_UIMainStoryboardFile = Main;
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationPortrait UIInterfaceOrientationPortraitUpsideDown UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPhone = "UIInterfaceOrientationPortrait UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = "Dmytro-Ryshchuk.Leetcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		42BB9D522CCF14E600A8CB57 /* Build configuration list for PBXProject "Leetcode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				42BB9D692CCF14E900A8CB57 /* Debug */,
				42BB9D6A2CCF14E900A8CB57 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		42BB9D6B2CCF14E900A8CB57 /* Build configuration list for PBXNativeTarget "Leetcode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				42BB9D6C2CCF14E900A8CB57 /* Debug */,
				42BB9D6D2CCF14E900A8CB57 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 42BB9D4F2CCF14E600A8CB57 /* Project object */;
}
